name: Cypress Tests

on: [push]

jobs:
  install:
    runs-on: ubuntu-latest
    container: cypress/browsers:node-18.14.1-chrome-111.0.5563.146-1-ff-111.0.1-edge-111.0.1661.54-1
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cypress install
        uses: cypress-io/github-action@v5 # use the explicit version number
        with:
          # Disable running of tests within install job
          runTests: false
          build: npm run build

      - run: npx cypress info
      - run: node --version

      - name: Save build folder
        uses: actions/upload-artifact@v3
        with:
          name: build
          if-no-files-found: error
          path: dist
  
  ui-chrome-tests:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    container:
      image: cypress/browsers:node-18.14.1-chrome-111.0.5563.146-1-ff-111.0.1-edge-111.0.1661.54-1
    needs: install
    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving Cypress Cloud hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        # run copies of the current job in parallel
        containers: [1, 2, 3, 4, 5]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download the build folders
        uses: actions/download-artifact@v3
        with:
          name: build
          path: dist

      - name: Cypress info
        run: npx cypress info

      - name: Node info
        run: node -v

      - name: "UI Tests - Chrome"
        uses: cypress-io/github-action@v5
        with:
          start: npm run dev
          wait-on: "http://localhost:5173"
          wait-on-timeout: 120
          browser: chrome
          record: true
          parallel: true
          group: "UI - Chrome"
          spec: src/**/*.
          config-file: cypress.config.ts
        env:
          # Recommended: pass the GitHub token lets this action correctly
          # determine the unique run id necessary to re-run the checks
          GH_REGISTRY_TOKEN: ${{ secrets.GH_REGISTRY_TOKEN }}